{
  "name": "ref-binder",
  "version": "0.0.1",
  "description": "manage relationships between event emitting objects",
  "main": "ref_binder.js",
  "scripts": {
    "test": "echo \"no can haz tests.\" && exit 1"
  },
  "dependencies": {
    "amdefine": ">=0.0.2"
  },
  "repository": "",
  "author": {
    "name": "tedsuo"
  },
  "license": "BSD",
  "readme": "# ref-binder\n\nlittle data-structure for managing event-oriented relationships\n\nAPI likely to change. :)\n\n## Example Usage\n\n````javascript\n\nvar RefBinder = require('ref-binder');\n\n// currently assumes you are using backbone\nvar model = new Backbone.Model();\nvar view = new Backbone.View();\n\n// create a set of references for a view\nvar refs = new RefBinder(view);\n\n// bind model events to view methods\nrefs.set('item1',model,{\n  'change': 'render',\n  'fetch': 'showLoader',\n  'sync': 'hideLoader'\n});\n\n// get a reference to the bound model object\nvar item1 = refs.get('item1');\n\n// properly de-reference and unbind the model\nrefs.unset('item1');\n\n// dereference everything when you are ready to destroy the view\nrefs.unsetAll();\n\n\n````\n",
  "_id": "ref-binder@0.0.1",
  "dist": {
    "shasum": "1455a32dc1f77f28559d2e0e1bc88c52fa9f92a0",
    "tarball": "https://registry.npmjs.org/ref-binder/-/ref-binder-0.0.1.tgz"
  },
  "_npmVersion": "1.1.59",
  "_npmUser": {
    "name": "tedsuo",
    "email": "ted@radicaldesigns.org"
  },
  "maintainers": [
    {
      "name": "tedsuo",
      "email": "ted@radicaldesigns.org"
    }
  ],
  "directories": {},
  "_shasum": "1455a32dc1f77f28559d2e0e1bc88c52fa9f92a0",
  "_from": "ref-binder@*",
  "_resolved": "https://registry.npmjs.org/ref-binder/-/ref-binder-0.0.1.tgz"
}
