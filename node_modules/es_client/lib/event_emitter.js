if (typeof define !== 'function') { var define = require('amdefine')(module) }
define( function(require,exports,module) {

    class EventEmitter
    {
        constructor(){
            this.events           = [];
            this.triggered_events = [];
        }

        emit(eventName, data, async)
        {
            if(async) this.triggered_events[eventName] = data;

            const event = this.events[eventName];
            if( event ) {
                event.forEach(fn => {
                    fn.call(null, data);
                });
            }
        }

        subscribe(eventName, fn) {
            if(!this.events[eventName]) {
                this.events[eventName] = [];
            }

            this.events[eventName].push(fn);

            if(this.triggered_events[eventName]) fn.call(null, this.triggered_events[eventName]);

            return () => {
                this.events[eventName] = this.events[eventName].filter(eventFn => fn !== eventFn);
            }
        }

        unsubribe(eventName){
            this.subscribe(eventName, () => console.log(""))
        }
    }

    module.exports.EventEmitter = EventEmitter;
});
