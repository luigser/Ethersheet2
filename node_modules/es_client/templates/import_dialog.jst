

<style>

    #es-modal-box {
        background-color: white;
        padding: 3px 3px 3px 3px;
    }

    .header {
        color: white;
        background-color: #4CAF50;
        width: 100%;
        height: 36px;
        line-height: 36px;
        font-size: 18px;
        display: flex;
    }

    .filterWhite {
        filter: brightness(1000);
        height: 24px;
        padding: 3px 8px;
    }

    .roundedDiv {
        border-radius: 50%;
        width: 32px;
        height: 32px;
        background-color: #4CAF50;
        color: white;
        text-align: center;
        line-height: 32px;
    }

    .card {
        margin: 8px;
        display: flex;
    }

    .cardTitle {
        color: #4CAF50;
        line-height: 32px;
        padding-left: 8px;
    }

    .cardContent {
        margin-left: 64px;
        overflow-x: auto;
        width: calc(100% - 220px );
    }

    .cardContentFullExtended {
        margin-left: 64px;
        overflow-x: auto;
        overflow-y: auto;
        width: calc(100% - 128px );
        height: calc(100% - 180px);
    }

    .footer {
        position: absolute;
        width: 100%;
        border-top: 1px solid lightgray;
        padding-top: 5px;
        bottom: 5px;
        text-align: right;
        right: 5px;
    }

    /* TABLE STYLE */

    table.bs_table {
        border-collapse: collapse;
        margin: 0 auto;
        font-size: 12px;
    }

    table.bs_table tr {
        background-color: #FAFAFA;
    }
    table.bs_table tr:nth-child(odd) {
        background-color: #E3F2FD;
    }

    table.bs_table thead th {
        background-color: #2196F3;
        color: #FFFFFF;
        padding: 12px;
        font-weight: 700;
        text-align: center;
        border: 0px;
        /*border-bottom: 2px solid green;*/
    }

    /*table.bs_table thead th.colRed {
        border-bottom: 2px solid red;
    }*/

    table.bs_table tfoot th {
        height: 2px;
        padding: 0;
        background-color: #2196F3;
    }

    table.bs_table td {
        /*padding: 4px 0 4px 16px;*/
        padding: 4px 0 4px 12px;
        text-align: center;
    }

    table.bs_table td.bs_border {
        width: 2px;
        padding: 0;
        background-color: #E0E0E0;
    }

    .inputButton {

    }

    /*Button*/
    div.bs_button {
        padding: 0 8px;
        margin: 0;
        border: 0;

        background-color: #43A047;
        box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);
        transition: all 0.3s cubic-bezier(.25,.8,.25,1);

        border-radius: 4px;

        height: 32px;
        /*width: 48px;*/
        line-height: 32px;
        text-align: center;
        cursor: pointer;

        color: #FFFFFF;
        font-weight: 700;
        width: 75px;
        float: right;
        margin-right: 10px;
    }

    div.bs_button:hover {
        box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);
        background-color: #2E7D32;
    }


    /*INPUT FILE*/

    .inputfile {
        width: 0.1px;
        height: 0.1px;
        opacity: 0;
        overflow: hidden;
        position: absolute;
        z-index: -1;
    }

    .inputfile + label {
        font-size: 16px;
        font-weight: 700;
        color: white;
        background-color: #43A047;
        display: inline-block;

        padding: 2px;
        line-height: 16px;

        box-shadow: 0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24);
        transition: all 0.3s cubic-bezier(.25,.8,.25,1);
        border-radius: 4px;
        width: 100%;
        display: flex;

        box-sizing: border-box;
    }

    .inputfile:focus + label,
    .inputfile + label:hover {
        background-color: #2E7D32;
    }

    .inputfile + label {
        cursor: pointer; /* "hand" cursor */
    }

    .inputfile:focus + label {
        outline: 1px dotted #000;
        outline: -webkit-focus-ring-color auto 5px;
    }

    .inputfile + label svg {
        width: 1em;
        height: 1em;
        vertical-align: middle;
        fill: currentColor;
        margin-top: -0.25em;
        margin-right: 0.25em;
    }

    .inputfile + label span {
        min-width: 200px;
        text-align: center;
        display: inline-block;
        text-overflow: ellipsis;
        white-space: nowrap;
        overflow: hidden;
        vertical-align: top;
        background-color: white;
        color: #000;
        height: 28px;
        line-height: 28px;
        width: calc(100% - 200px);
    }

    .inputfile + label div.chooseFile {
        line-height: 28px;
        width: 200px;
        text-align: center;
    }

</style>

<div class="header">
    <img class="filterWhite" src="/es_client/icons/ethersheet-icon-import.png" />
    <div class="headerTitle">Import CSV Wizard</div>
</div>

    <div class="card">
        <div class="roundedDiv">
            1
        </div>
        <div class="cardTitle">
            Select CSV file
        </div>

        <div class="cardContent">
            <form id="formFile" action="/ethersheet/import/csv" method="post" enctype="multipart/form-data">
            <!--<form id="formFile" action="/import/csv" method="post" enctype="multipart/form-data">-->
                <!--<input class="inputButton" type="file" name="csv_file" onchange="onChangedFile(event)">-->

                <input id="csv_file" type="file" name="csv_file" class="inputfile" onclick="onClickFile(event)" onchange="onChangedFile(event)" />
                <label for="csv_file">
                    <span id="csvFileName"></span>
                    <div class="chooseFile">
                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="17" viewBox="0 0 20 17"><path d="M10 0l-5.2 4.9h3.3v5.1h3.8v-5.1h3.3l-5.2-4.9zm9.3 11.5l-3.2-2.1h-2l3.4 2.6h-3.5c-.1 0-.2.1-.2.1l-.8 2.3h-6l-.8-2.2c-.1-.1-.1-.2-.2-.2h-3.6l3.4-2.6h-2l-3.2 2.1c-.4.3-.7 1-.6 1.5l.6 3.1c.1.5.7.9 1.2.9h16.3c.6 0 1.1-.4 1.3-.9l.6-3.1c.1-.5-.2-1.2-.7-1.5z"></path></svg> Choose a file ...
                    </div>
                </label>

                <input type="hidden" name="sheet_id" value="<%=sheet_id%>">
            </form>
        </div>
    </div>



    <div class="card">
        <div class="roundedDiv">
            2
        </div>
        <div class="cardTitle">
            Checking of data and preview
        </div>
    </div>

    <div id="divPreview" class="cardContent">

    </div>

    <div class="footer">
        <div id="btnCancel" class="bs_button" onclick="$('#es-modal-overlay').hide()">Cancel</div>
        <div id="btnSubmit" class="bs_button" onclick="document.getElementById('formFile').submit();" style="display: none;">Import</div>
    </div>


    <div class="cardContentFullExtended">
        <p id="errorMessage" style="color: red;"></p>
        <ul id="errorList" style="color: red;">
        </ul>
        <p id="warningMessage" style="color: #ff8f00;"></p>
        <ul id="warningList" style="color: #ff8f00;">
        </ul>

    <table id="tblPreview" class="bs_table" style="display: none;">
        <thead id="tblHeader">
            <tr>
                <th class="colRed">Id</th>
                <th>Name</th>
            </tr>
        </thead>
        <tbody id="tblBody">
            <tr>
                <td>xxx</td>
                <td>yyy</td>
            </tr>
            <tr>
                <td>xxx</td><td>yyy</td>
            </tr>
        </tbody>
        <tfoot>
            <tr>
                <th id="footerLine" colspan="2"></th>
            </tr>
        </tfoot>
    </table>
    </div>

    <script src="/es_client/vendor/csvjson.js"></script>
    <script>

        function onClickFile(event) {
            event.currentTarget.value = null;
        }//EndFunction.

        function onChangedFile(event) {
            var input = event.target;

            console.log(" " + this.value);

            //Init the view.
            document.getElementById("errorMessage").innerText = "";
            document.getElementById("warningMessage").innerText = "";
            $('#tblPreview').hide();
            $('#tblHeader').remove();
            $('#tblBody').remove();
            $('#errorList').empty();
            $('#warningList').empty();

            //Read file.
            var filereader = new FileReader();
            filereader.readAsText(input.files[0]);
            filereader.onload = function(evt){
                var csvDataset = filereader.result;
                $errorList = $('#errorList');
                $warnList = $('#warningList');

                //Extract file name.
                debugger;
                var fullPath = document.getElementById('csv_file').value;
                if (fullPath) {
                    var startIndex = (fullPath.indexOf('\\') >= 0 ? fullPath.lastIndexOf('\\') : fullPath.lastIndexOf('/'));
                    var filename = fullPath.substring(startIndex);
                    if (filename.indexOf('\\') === 0 || filename.indexOf('/') === 0) {
                        filename = filename.substring(1);
                    }
                    $('#csvFileName').text(filename);
                }

                //Read the CSV Content.
                var csvparser = new csvjson();
                var jsonDataset = csvparser.read(csvDataset);

                //Check whether there are warnings.
                if (jsonDataset.warnings.length > 0) {
                    document.getElementById("warningMessage").innerText = "Additional suggested things to optionally check are:";
                    $warnList.show();
                    for (var i=0; i<jsonDataset.warnings.length; i++) {
                        var warnMsg = jsonDataset.warnings[i];
                        $warnList.append('<li>' + warnMsg.description + '</li>');
                    }
                }

                //Check whether there are errors in the csv.
                if (jsonDataset.errors.length > 0) {
                    var errormessage = "The CSV file has the following errors:";
                    document.getElementById("errorMessage").innerText = errormessage;
                    $errorList.show();
                    for (var i=0; i<jsonDataset.errors.length; i++) {
                        var errMsg = jsonDataset.errors[i];
                        $errorList.append('<li>' + errMsg.description + '</li>');
                    }
                    $('#btnSubmit').hide();
                    return false;
                }

                //Creates the table.
                tblPreview.style.display = "table";
                var thead = document.createElement("thead"); thead.id = "tblHeader";
                var tbody = document.createElement("tbody"); tbody.id = "tblBody";
                $('#tblPreview').prepend(thead, tbody);

                var tHeadRow = document.createElement("tr");
                $tblHeaderTR = $('#tblHeader').append(tHeadRow);
                $tblHeader = $('#tblHeader');
                $tblBody = $('#tblBody');

                //Shows the columns.
                for (var i=0; i<jsonDataset.fields.length; i++) {
                    var col = document.createElement("th");
                    col.textContent = jsonDataset.fields[i].label;
                    $tblHeaderTR.append(col);
                }

                //Shows the first five columns.
                var upperbound = Math.min(5, jsonDataset.records.length);
                for (var i=0; i<upperbound; i++) {
                    var record = jsonDataset.records[i];
                    var tRow = document.createElement("tr");
                    $row = $(tRow);
                    $tblBody.append(tRow);

                    for (var j=0; j<jsonDataset.fields.length; j++) {
                        var field = jsonDataset.fields[j];
                        var col = record[field.name];
                        var tcol = document.createElement('td');
                        tcol.innerText = col;
                        $row.append(tcol);
                    }
                }
                $('#footerLine').attr('colspan', jsonDataset.fields.length);
                $('#btnSubmit').show();
            };
            filereader.onerror = function (evt) {
                var errormessage = evt.target.error;
                document.getElementById("errorMessage").innerText = errormessage;
            }

            return true;
        }//EndFunctionOnChange.

    </script>
</div>




