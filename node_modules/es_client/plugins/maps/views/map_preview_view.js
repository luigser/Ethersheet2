if (typeof define !== 'function') { var define = require('amdefine')(module) }
define( function(require,exports,module)
{
    const BaseView = require('core_plugins/base_plugin/views/base_view').View;
    const MapView  = require('./map_view').View;
    const $        = require('jquery');

    class MapPreviewView extends BaseView {
        constructor(params) {
            super(params);
            this.config = JSON.parse(JSON.stringify(this.config));
            this.config.PLACEHOLDER     = "#es-container";
            this.config.ELEMENT         = ".es-table-view";
            this.template_view          = "map_preview_view";
            this.events = {
                'mouseover .es-table-cell': 'showCellPreview',
            };
            this.mapPreview = new MapView(params);
            this.initializeElements();
            super.render();
        }

        initializeElements()
        {
            super.initializeElements();
            this.cellPreviewElement = $("#cell-preview");
        }

        showCellPreview(e)
        {
            let cell  = $(e.currentTarget);
            let xOffset = 10;
            let yOffset = 10;

            this.mapPreview.cell = cell;

            if((/^[-]?[0-9]{1,2}[.]{1}[0-9]+[,]{1}[\s]?[-]?[0-9]{1,2}[.]{1}[0-9]+$/g).test(cell.text()))
            {//geo point
                this.mapPreview.coords  = cell.text().split(",").map(Number).reverse();
                this.mapPreview.geojson = undefined;

            }else if((/^\{/i).test(cell.text()) && (/\}$/i).test(cell.text()))
            {//geojson
                this.mapPreview.geojson = cell.text();
                this.mapPreview.coords  = undefined;
            }else{
                return;
            }

            this.cellPreviewElement.css({
                "top": (e.pageY - yOffset) + "px",
                "left": (e.pageX + xOffset) + "px",
                'display': 'block'
            });
            this.mapPreview.config.ELEMENT_TO_FILL = "#cell-preview";
            this.mapPreview.preRendering();

            cell.on('mouseleave', function (e) {
                this.cellPreviewElement.off('click');
                this.cellPreviewElement.hide();
            }.bind(this));
        }

    }

    module.exports.View = MapPreviewView;
});